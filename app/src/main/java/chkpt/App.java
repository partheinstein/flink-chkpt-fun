/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package chkpt;

import java.util.concurrent.TimeUnit;

import org.apache.flink.api.java.tuple.Tuple2;
import org.apache.flink.streaming.api.datastream.AsyncDataStream;
import org.apache.flink.streaming.api.datastream.DataStream;
import org.apache.flink.streaming.api.datastream.DataStreamSource;
import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.streaming.api.functions.sink.SinkFunction;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class App {
	private static final Logger logger = LoggerFactory.getLogger(App.class);

	public static void main(String[] args) throws Exception {

		logger.info("Starting tdax job");

		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();

		DataStreamSource<Integer> source = env.addSource(new CountingSource());
		DataStream<Tuple2<Integer, Boolean>> stream = AsyncDataStream.unorderedWait(source, new ChkPtAsyncFuncExample(), 100000, TimeUnit.MILLISECONDS);
		stream.addSink(new SinkFunction<Tuple2<Integer, Boolean>>() {
			@Override
			public void invoke(Tuple2<Integer, Boolean> t, Context context) {
				logger.info("sink: {}:{}", t.f0, t.f1);
			}
		});

		env.enableCheckpointing(10000);

		env.execute();

		logger.info("started job");
	}
}
