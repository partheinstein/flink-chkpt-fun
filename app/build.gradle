/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */
plugins {
  id "java"
  id 'com.github.johnrengelman.shadow' version '6.1.0'
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}


tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}






ext {
  // Flink + Kinesis Data Analytics version lineup: https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-creating-apps.html
  flinkVersion = '1.11.0'
  kdaRuntimeVersion = '1.2.0'
  kdaFlinkConnectorsVersion = '2.0.0'

  scalaBinaryVersion = '2.12'
  slf4jVersion = '1.7.7'
}

dependencies {

  // Flink
  implementation "org.apache.flink:flink-connector-kinesis_$scalaBinaryVersion:${flinkVersion}"
  // TODO why does this fail the unit test but implementation scope doesn't
  // https://stackoverflow.com/questions/54106187/apache-flink-java-lang-noclassdeffounderror
  // compileOnly "org.apache.flink:flink-streaming-java_$scalaBinaryVersion:${flinkVersion}"
  implementation "org.apache.flink:flink-streaming-java_$scalaBinaryVersion:${flinkVersion}"


  // Utils
  //  compileOnly "org.slf4j:slf4j-log4j12:${slf4jVersion}"
  implementation 'org.apache.httpcomponents:httpasyncclient:4.1.4'
  implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'




  testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
  //testCompile 'com.amazonaws:DynamoDBLocal:1.15.0'
  //for flink test harness
  // https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/testing/
  implementation "org.apache.flink:flink-test-utils_${scalaBinaryVersion}:${flinkVersion}"
  implementation "org.apache.flink:flink-runtime_${scalaBinaryVersion}:${flinkVersion}"
  implementation "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}:tests"


}


sourceCompatibility = 11
targetCompatibility = 11


sourceSets {
  main {
    java {
      srcDirs = ['src/main/java']
    }
  }
}

shadowJar {
  dependsOn build

  zip64 true
  exclude "META-INF/*.SF"
  exclude "META-INF/*.DSA"
  exclude "META-INF/*.RSA"
  exclude "META-INF/maven/**"
  exclude "application-properties-local.json"

  archiveVersion.set('0.0.1')

  manifest {
    attributes(
      "Main-Class": 'chkpt.App'
      )
  }

  //  dependencies {
  //    exclude(dependency("org.apache.flink:force-shading"))
  //    exclude(dependency("com.google.code.findbugs:jsr305"))
  //  }

  doLast {
    new File(projectDir, "archivename.txt").text = "${shadowJar.archiveFileName.get()}"
  }
}

task copyNativeDeps(type: Copy) {
  from(configurations.compile + configurations.testCompile) {
    include '*.dll'
    include '*.dylib'
    include '*.so'
  }
  into 'build/libs'
}

test {
  useTestNG()
  dependsOn copyNativeDeps
  systemProperty "java.library.path", 'build/libs'
}

